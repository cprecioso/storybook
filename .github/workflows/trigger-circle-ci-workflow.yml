name: Trigger CircleCI workflow

on:
  # Use pull_request_target, as we don't need to check out the actual code of the fork in this script.
  # And this is the only way to trigger the Circle CI API on forks as well.
  pull_request_target:
    types: [opened, synchronize, labeled, unlabeled, reopened, converted_to_draft, ready_for_review]
  push:
    branches:
      - next
      - chore/skip-tasks-based-on-nx-affected

env:
  CIRCLE_CI_TOKEN: ${{ secrets.CIRCLE_CI_TOKEN }}
  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: true

jobs:
  get-branch:
    runs-on: ubuntu-latest
    steps:
      - id: get-branch
        run: |
          if  [ "${{ github.event.pull_request.head.repo.fork }}" = "true" ]; then
            export BRANCH=pull/${{ github.event.pull_request.number }}/head
            elif [ "${{ github.event_name }}" = "push" ]; then
            export BRANCH=${{ github.ref_name }}
            else
            export BRANCH=${{ github.event.pull_request.head.ref }}
          fi
          echo "$BRANCH"
          echo "branch=$BRANCH" >> $GITHUB_ENV
    outputs:
      branch: ${{ env.branch }}

  get-affected-templates:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Generate affected-templates.json
        run: |
          cd code
          yarn
          cd ../scripts
          yarn
          yarn get-affected-templates
      - uses: sergeysova/jq-action@v2
      - name: Set parallelism count for each workflow
        run: |
          echo "CI_PARALLELISM=$(jq '.ci | length' affected-templates.json)" >> $GITHUB_ENV
          echo "PR-PARALLELISM=$(jq '.pr | length' affected-templates.json)" >> $GITHUB_ENV
          echo "MERGED_PARALLELISM=$(jq '.merged | length' affected-templates.json)" >> $GITHUB_ENV

  trigger-ci-tests:
    runs-on: ubuntu-latest
    needs: [get-branch, get-affected-templates]
    if: github.event_name == 'pull_request_target' && github.event.pull_request.draft == true && !contains(github.event.pull_request.labels.*.name, 'ci:pr') && !contains(github.event.pull_request.labels.*.name, 'ci:merged') && !contains(github.event.pull_request.labels.*.name, 'ci:daily')
    steps:
      - name: Trigger draft PR tests
        run: >
          curl -X POST --location "https://circleci.com/api/v2/project/gh/storybookjs/storybook/pipeline" \
            -H "Content-Type: application/json" \
            -H "Circle-Token: $CIRCLE_CI_TOKEN" \
            -d '{
                  "branch": "${{ needs.get-branch.outputs.branch }}",
                  "parameters": {
                    "workflow": "ci",
                    "target-branch": "${{ github.base_ref }}",
                    "parallelism": $CI_PARALLELISM
                  }
                }'
  trigger-pr-tests:
    runs-on: ubuntu-latest
    needs: [get-branch, get-affected-templates]
    if: github.event_name == 'pull_request_target' && ((github.event.pull_request.draft == false || contains(github.event.pull_request.labels.*.name, 'ci:pr')) && !contains(github.event.pull_request.labels.*.name, 'ci:merged') && !contains(github.event.pull_request.labels.*.name, 'ci:daily'))
    steps:
      - name: Trigger PR tests
        run: >
          curl -X POST --location "https://circleci.com/api/v2/project/gh/storybookjs/storybook/pipeline" \
            -H "Content-Type: application/json" \
            -H "Circle-Token: $CIRCLE_CI_TOKEN" \
            -d '{
                  "branch": "${{ needs.get-branch.outputs.branch }}",
                  "parameters": {
                    "workflow": "pr",
                    "target-branch": "${{ github.base_ref }}",
                    "parallelism": $PR_PARALLELISM
                  }
                }'
  trigger-merged-tests:
    runs-on: ubuntu-latest
    needs: [get-branch, get-affected-templates]
    if: github.event_name == 'push' || (contains(github.event.pull_request.labels.*.name, 'ci:merged') && !contains(github.event.pull_request.labels.*.name, 'ci:daily'))
    steps:
      - name: Trigger merged tests
        run: >
          curl -X POST --location "https://circleci.com/api/v2/project/gh/storybookjs/storybook/pipeline" \
            -H "Content-Type: application/json" \
            -H "Circle-Token: $CIRCLE_CI_TOKEN" \
            -d '{
                  "branch": "${{ needs.get-branch.outputs.branch }}",
                  "parameters": {
                    "workflow": "merged",
                    "target-branch": "${{ github.base_ref }}",
                    "parallelism": $MERGED_PARALLELISM
                  }
                }'
  trigger-daily-tests:
    runs-on: ubuntu-latest
    needs: get-branch
    if: github.event_name == 'pull_request_target' && contains(github.event.pull_request.labels.*.name, 'ci:daily')
    steps:
      - name: Trigger the daily tests
        run: >
          curl -X POST --location "https://circleci.com/api/v2/project/gh/storybookjs/storybook/pipeline" \
            -H "Content-Type: application/json" \
            -H "Circle-Token: $CIRCLE_CI_TOKEN" \
            -d '{
                  "branch": "${{ needs.get-branch.outputs.branch }}",
                  "parameters": {
                    "workflow": "daily"
                  }
                }'